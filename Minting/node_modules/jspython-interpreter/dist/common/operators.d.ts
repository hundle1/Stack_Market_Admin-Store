export declare enum OperationTypes {
    Arithmetic = 0,
    Assignment = 1,
    Comparison = 2,
    Logical = 3,
    Membership = 4
}
export type AssignmentOperators = '=' | '+=' | '-=' | '*=' | '/=' | '++' | '--';
export type ArithmeticOperators = '+' | '-' | '*' | '/' | '%' | '**' | '//';
export type ComparisonOperators = '>' | '>=' | '==' | '!=' | '<>' | '<' | '<=';
export type LogicalOperators = 'and' | 'or';
export type MembershipOperators = 'in';
export type Operators = AssignmentOperators | ArithmeticOperators | ComparisonOperators | LogicalOperators | MembershipOperators;
export declare const OperatorsMap: Map<Operators, OperationTypes>;
export type Primitive = string | number | boolean | null;
export type ExpressionOperators = ArithmeticOperators | ComparisonOperators | LogicalOperators | MembershipOperators;
type ExpressionOperation = (l: Primitive, r: Primitive) => Primitive;
export declare const OperationFuncs: Map<ExpressionOperators, ExpressionOperation>;
export {};
//# sourceMappingURL=operators.d.ts.map